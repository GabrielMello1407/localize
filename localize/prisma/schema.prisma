generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id               Int      @id @default(autoincrement())
  name             String
  email            String   @unique
  password         String
  role             Role     @default(USER)
  createdAt        DateTime @default(now())
  tickets          Ticket[]
  events           Event[]
  cpf              String   @unique
  whatsapp         String
  address          String
  state            String
  houseNumber      Int
  cep              String
  birthDate        DateTime
  termsAccepted    Boolean  @default(false)
  city             String
  neighborhood     String
  photoUrl         String   @default("public/usuario.png")
  isEmailConfirmed Boolean  @default(false)
}

model Event {
  id          Int               @id @default(autoincrement())
  name        String
  description String
  date        DateTime
  location    String
  price       Float
  capacity    Int
  tickets     Ticket[]
  finished    Boolean           @default(false)
  createdAt   DateTime          @default(now())
  creatorId   Int
  creator     User              @relation(fields: [creatorId], references: [id])
  imageUrl    String?
  ticketTypes EventTicketType[]
}

model Ticket {
  id         Int      @id @default(autoincrement())
  userId     Int
  eventId    Int
  codeQr     String   @unique
  used       Boolean  @default(false)
  qrCodeUrl  String
  createdAt  DateTime @default(now())
  ticketType String

  user  User  @relation(fields: [userId], references: [id])
  event Event @relation(fields: [eventId], references: [id])
}

model EventTicketType {
  id       Int    @id @default(autoincrement())
  eventId  Int
  type     String
  price    Float
  capacity Int

  event Event @relation(fields: [eventId], references: [id])
}
